import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import Script from "next/script";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="es">
      <head>
        <style dangerouslySetInnerHTML={{
          __html: `
            /* Hide Google Translate widget completely */
            #google_translate_element {
              display: none !important;
            }
            .goog-te-gadget {
              display: none !important;
            }
            /* Hide Google Translate banner at top */
            .goog-te-banner-frame {
              display: none !important;
            }
            body {
              top: 0 !important;
            }
          `
        }} />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {/* Hidden Google Translate element - required for translation to work */}
        <div id="google_translate_element"></div>
        {children}

        {/* Google Translate Scripts */}
        <Script
          id="google-translate-init"
          strategy="beforeInteractive"
          dangerouslySetInnerHTML={{
            __html: `
              window.googleTranslateElementInit = function() {
                try {
                  if (typeof google !== 'undefined' && google.translate && google.translate.TranslateElement) {
                    new google.translate.TranslateElement({
                      pageLanguage: 'es',
                      includedLanguages: 'es,pt',
                      layout: google.translate.TranslateElement.InlineLayout.SIMPLE,
                      autoDisplay: false
                    }, 'google_translate_element');
                    console.log('✅ Google Translate initialized successfully');
                    window.googleTranslateReady = true;
                  } else {
                    console.warn('⚠️ Google Translate API not ready yet, retrying...');
                    setTimeout(window.googleTranslateElementInit, 500);
                  }
                } catch (error) {
                  console.error('❌ Error initializing Google Translate:', error);
                }
              };
            `
          }}
        />
        <Script
          id="google-translate-script"
          src="https://translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"
          strategy="afterInteractive"
        />
      </body>
    </html>
  );
}
